<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
<title>Practice Template Page</title>

<link rel="stylesheet" type="text/css" href="../../_common/css/global.css" />
<link rel="stylesheet" type="text/css" href="css/customize.css" />

<script type="text/javascript" src="../../_common/js/dojo/dojo.js" data-dojo-config="async:true">
// Load Dojo asynchronously.
</script>

<script type="text/javascript">

// Configure AccDC modules and scripts to be loaded synchronously for flow control
InitAccDC = [
'../../../2 Accessible Component Modules/modal_module.min.js',
'../../../3 AccDC Bootstrap/accdc_bootstrap.js'
];

// Now load the AccDC API using the Dojo AMD Loader
// The referenced AccDC API file is located at ../../_common/js/dojo/acc.dc.api.js
require(['dojo/acc.dc.api']);

</script>

</head>
<body>
<div>

<p>

<!-- Attributes explained

• class="accModal" : The bootstrap class name that specifies an accessible modal. 
• data-src : The resource path and pointer to the ID attribute of the modal container element. If set, data-internal should be blank or not included. 
• data-internal : The ID attribute of the modal container element within the same document.
If data-internal is set, data-src should be blank or not included. 
• data-role : The role name that is conveyed to screen reader users as beginning and ending boundary text for the new content. "Modal" is set by default if no value is specified. 
• id : The unique ID of the element. This value is also registered as the ID of the modal AccDC Object, making it possible to invoke the object programmatically.
E.G $A.reg.uniqueID.open();
// All other AccDC API properties and methods are similarly available.  
-->

<a href="#" id="modalTrigger" data-internal="modalContainer" data-role="Dialog" class="accModal"> Open Modal </a>

</p>

<div class="desc">
<p>
The modal is optomized for screen reader and keyboard only users.
</p>
<p><pre>
Activate the triggering element to open the modal.
Screen reader users will be confined within the modal content, and will not be able to see the background page content. (Confirmed in both Windows platform and iOS touch screen devices)
Keyboard focus is automatically restricted to active elements within the modal, which is handled using HTML5 attributes within the first and last form fields within the markup.
</pre></p>
</div>

</div>

<div class="hidden">

<!-- Important

To ensure proper keyboard focus scycling within the modal when using the Tab and Shift+Tab keys, the following HTML5 attributes must be added to the first and last focusable active elements within the modal.

data-first="true" : Must be added to the first focusable active element within the modal.
data-last="true" : Must be added to the last focusable active element within the modal.

Also, when Implementing a Close link or button, the className must match the "closeClassName" property within the script declaration.
(If not explicitly set, the default value "lbClose" is configured within the module script file, and should be used for all Close links or buttons)
Doing so will automatically bind the close methods with this element, and set keyboard focus properly when the AccDC Object is closed.

Lastly, it may be tempting to add role="dialog" or role="application" to the markup. Do not do that!
The reasons: Screen readers such as JAWS and NVDA will prevent Virtual Buffer navigation using the arrow keys within the content of the modal if you do this. This is especially true for role="dialog", thus rendering textual content within the modal innaccessible.
This is the case in JAWS 12 and 13. In JAWS 14 however, Freedom Scientific has changed the rules so that Applications Mode is not enforced as it was previously. Nevertheless this still occurs in versions 12 and 13, and also in NVDA, so now role="dialog" is not even consistently implemented across screen readers.
So, to prevent inadvertent accessibility issues, simply don't use role="dialog" or role="application" for modals.
-->

<div id="modalContainer">

<div>
<a data-first="true" class="lbClose" href="#"> Close Icon for Modal </a>
</div>

<div>
Modal content goes here
</div>

<div>
<a data-last="true" href="#" > Last active element in modal </a>
</div>

</div>

</div>

</body>
</html>